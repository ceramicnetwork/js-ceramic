name: Test and publish Docker images

on:
  push:
    branches: [ develop, release-candidate, main ]
  pull_request: # pull requests
  workflow_dispatch: # manually triggered

env:
  # Dagger
  DAGGER_LOG_FORMAT: plain
  DAGGER_LOG_LEVEL: info
  DAGGER_CACHE_BASE: js-ceramic-ci
  DAGGER_CI: cue.mod/pkg/github.com/3box/pipelinetools/ci/main.cue
  # General
  BRANCH: ${{ github.ref_name }}
  GITHUB_SHA: ${{ github.sha }}
  # Secrets
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  push:
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      -
        name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      -
        name: Checkout code
        uses: actions/checkout@v3
      -
        name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v1
      -
        name: Set up cache for mainline branches
        run: |
          echo "DAGGER_CACHE_TO=type=gha,mode=max,scope=${{ env.DAGGER_CACHE_BASE }}-main" >> $GITHUB_ENV
          echo "DAGGER_CACHE_FROM=type=gha,scope=${{ env.DAGGER_CACHE_BASE }}-main" >> $GITHUB_ENV
      -
        name: Set up cache for for pull requests
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "DAGGER_CACHE_TO=type=gha,mode=max,scope=${{ env.DAGGER_CACHE_BASE }}-${{ github.event.number }}" >> $GITHUB_ENV
          echo "DAGGER_CACHE_FROM=type=gha,scope=${{ env.DAGGER_CACHE_BASE }}-main type=gha,scope=${{ env.DAGGER_CACHE_BASE }}-${{ github.event.number }}" >> $GITHUB_ENV
      -
        name: Install Dagger
        uses: dagger/dagger-for-github@v3
        with:
          version: "v0.2.12"
          cmds: |
            dagger project init
            dagger project update github.com/3box/pipelinetools@develop
            dagger do build -p ${{ env.DAGGER_CI }}
      -
        name: Print Buildkitd Logs
        if: ${{ failure() }}
        run: docker logs dagger-buildkitd
