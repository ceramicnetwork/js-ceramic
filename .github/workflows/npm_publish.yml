name: Publish npm packages

on:
  push:
    branches: [ feat/npm_publish ]
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of publish (one of: rc, full)'
        required: true
        default: 'rc'
      dryrun:
        description: 'Dry run or actual publish (one of: true, false)'
        required: true
        default: 'true'

jobs:
  publish:
    runs-on: self-hosted
    steps:
      -
        name: Setup environment
        id: set-vars
        run: |
          if [[ "${{ github.event.inputs.type }}" == "rc" ]]; then
            echo "::set-output name=target-branch::release-candidate"
            echo "::set-output name=source-branch::develop"
            echo "::set-output name=tag::release-candidate"
          elif [[ "${{ github.event.inputs.type }}" == "full" ]]; then
            echo "::set-output name=target-branch::master"
            echo "::set-output name=source-branch::release-candidate"
            echo "::set-output name=tag::latest"
          fi
          echo "::set-output name=dry-run::${{ github.event.inputs.dryrun }}"
      -
        name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.set-vars.outputs.target-branch }}
      -
        name: Merge source branch
        env:
          SOURCE_BRANCH: ${{ steps.set-vars.outputs.source-branch }}
        run: git merge origin $SOURCE_BRANCH
      -
        name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      -
        name: Initialize and build code
        run: npm ci --ignore-scripts && npm run build --if-present
      -
        name: Publish packages to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TAG: ${{ steps.set-vars.outputs.tag }}
          DRY_RUN: ${{ steps.set-vars.outputs.dry-run }}
        run: |
          DRY_RUN_CMD=""
          if [[ "$DRY_RUN" == "true"]]; then
            DRY_RUN_CMD="--dry-run"
          fi
          npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
          npm publish:$TAG --ignore-scripts $DRY_RUN_CMD
      -
        name: Update and push code
        if: ${{ steps.set-vars.outputs.dry-run == 'false' }}
        env:
          TARGET_BRANCH: ${{ steps.set-vars.outputs.target-branch }}
          SOURCE_BRANCH: ${{ steps.set-vars.outputs.source-branch }}
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

          if [[ -z "$SOURCE_BRANCH" ]]; then
            git checkout $SOURCE_BRANCH
            git merge origin master
            git push origin $SOURCE_BRANCH
          fi

          # Always merge and push to `develop`
          git checkout develop
          git merge origin $TARGET_BRANCH
          git push origin develop