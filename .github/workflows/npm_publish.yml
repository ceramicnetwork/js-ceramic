name: Publish npm packages

on:
  push:
    branches: [ feat/npm_publish ]
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of publish (one of: rc, full)'
        required: true
        default: 'rc'
      dryrun:
        description: 'Dry run or actual publish (one of: true, false)'
        required: true
        default: 'true'

jobs:
  publish:
    runs-on: self-hosted
    steps:
      -
        name: Setup environment
        id: set-vars
        run: |
          if [[ "${{ github.event.inputs.type }}" == "full" ]]; then
            echo "::set-output name=target-branch::master"
            echo "::set-output name=source-branch::release-candidate"
            echo "::set-output name=tag::latest"
          else
            # Default to `release-candidate`
            echo "::set-output name=target-branch::release-candidate"
            echo "::set-output name=source-branch::develop"
            echo "::set-output name=tag::release-candidate"
          fi
          # If it's not explicitly `true`, it's `false`
          echo "::set-output name=dry-run::${{ github.event.inputs.dryrun }} == 'true')"
      -
        name: Checkout ${{ steps.set-vars.outputs.target-branch }}
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.set-vars.outputs.target-branch }}
      -
        name: Merge ${{ steps.set-vars.outputs.source-branch }} -> ${{ steps.set-vars.outputs.target-branch }}
        env:
          SOURCE_BRANCH: ${{ steps.set-vars.outputs.source-branch }}
        run: |
          git fetch origin $SOURCE_BRANCH
          git merge origin/$SOURCE_BRANCH
          # git push
      -
        name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      -
        name: Initialize and build code
        run: |
          ls
          pwd
          cd js-ceramic
          npm ci && npm run build
      -
        name: Publish packages to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          TAG: ${{ steps.set-vars.outputs.tag }}
          DRY_RUN: ${{ steps.set-vars.outputs.dry-run }}
        run: |
          echo $TAG
          echo $DRY_RUN
          DRY_RUN_CMD=""
          if [[ "$DRY_RUN" == "true"]]; then
            DRY_RUN_CMD="--dry-run"
          fi
          npm config set //registry.npmjs.org/:_authToken "${NPM_TOKEN}"
          npm publish:$TAG --ignore-scripts "$DRY_RUN_CMD"
      -
        name: Update and push code to ${{ steps.set-vars.outputs.source-branch }}
        env:
          SOURCE_BRANCH: ${{ steps.set-vars.outputs.source-branch }}
          TARGET_BRANCH: ${{ steps.set-vars.outputs.target-branch }}
        run: |
          git checkout -B $SOURCE_BRANCH refs/remotes/origin/$SOURCE_BRANCH
          git merge origin/$TARGET_BRANCH
          # git push
          # Always merge and push to `develop` - if it's already been merged to above, this action will have no effect
          git checkout -B develop refs/remotes/origin/develop
          git merge origin/$TARGET_BRANCH
          # git push