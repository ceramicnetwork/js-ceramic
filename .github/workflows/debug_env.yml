name: Deploy debug image to dev infra

on:
  push:
    branches: [ debug_* ]

jobs:
  build_and_deploy_images:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DEBUG_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEBUG_AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.DEBUG_AWS_REGION }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEBUG_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEBUG_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEBUG_AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Variables
        id: set-vars
        env:
          ECR_REPOSITORY: "ceramic-debug"
          ECS_CLUSTER: "ceramic-dev-ex"
        run: |
          SHA_TAG=$(git rev-parse --short=12 "${{ github.sha }}")
          echo "::set-output name=ECR_REPOSITORY::$ECR_REPOSITORY"
          echo "::set-output name=ECS_CLUSTER::$ECS_CLUSTER"
          echo "::set-output name=CERAMIC_SVC::$ECS_CLUSTER-node"
          echo "::set-output name=IPFS_SVC::$ECS_CLUSTER-ipfs-nd"
          echo "::set-output name=SHA_TAG::$SHA_TAG"

      - name: Build and push Ceramic image to ECR
        id: build-ceramic
        uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}
          image_name: ${{ steps.set-vars.outputs.ECR_REPOSITORY }}/js-ceramic
          image_tag: ${{ steps.set-vars.outputs.SHA_TAG }},debug,latest
          dockerfile: Dockerfile.daemon

      - name: Build and push IPFS image to ECR
        id: build-ipfs
        uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}
          image_name: ${{ steps.set-vars.outputs.ECR_REPOSITORY }}/ipfs-daemon
          image_tag: ${{ steps.set-vars.outputs.SHA_TAG }},debug,latest
          dockerfile: Dockerfile.ipfs-daemon

      - name: Update Ceramic
        uses: silinternational/ecs-deploy@master
        with:
          aws_access_key_cmd: "--aws-access-key"
          aws_access_key: ${{ secrets.DEBUG_AWS_ACCESS_KEY_ID }}
          aws_secret_key_cmd: "--aws-secret-key"
          aws_secret_key: ${{ secrets.DEBUG_AWS_SECRET_ACCESS_KEY }}
          cluster_cmd: "--cluster"
          cluster: ${{ steps.set-vars.outputs.ECS_CLUSTER }}
          image_cmd: "--image"
          image: ${{ steps.build-ceramic.outputs.FULL_IMAGE_NAME }}:${{ steps.set-vars.outputs.SHA_TAG }}
          region_cmd: "--region"
          region: ${{ secrets.DEBUG_AWS_REGION }}
          service_name_cmd: "--service-name"
          service_name: ${{ steps.set-vars.outputs.CERAMIC_SVC }}
          timeout_cmd: "--timeout"
          timeout: "360"
          use_latest_task_def: "--use-latest-task-def"
          verbose: "--verbose"

      - name: Update IPFS
        uses: silinternational/ecs-deploy@master
        with:
          aws_access_key_cmd: "--aws-access-key"
          aws_access_key: ${{ secrets.DEBUG_AWS_ACCESS_KEY_ID }}
          aws_secret_key_cmd: "--aws-secret-key"
          aws_secret_key: ${{ secrets.DEBUG_AWS_SECRET_ACCESS_KEY }}
          cluster_cmd: "--cluster"
          cluster: ${{ steps.set-vars.outputs.ECS_CLUSTER }}
          image_cmd: "--image"
          image: ${{ steps.build-ipfs.outputs.FULL_IMAGE_NAME }}:${{ steps.set-vars.outputs.SHA_TAG }}
          region_cmd: "--region"
          region: ${{ secrets.DEBUG_AWS_REGION }}
          service_name_cmd: "--service-name"
          service_name: ${{ steps.set-vars.outputs.IPFS_SVC }}
          timeout_cmd: "--timeout"
          timeout: "360"
          use_latest_task_def: "--use-latest-task-def"
          verbose: "--verbose"

      - name: Stop/restart running tasks
        run: |
            cd .github/workflows
            chmod +x stopTasks.sh
            ./stopTasks.sh ${{ steps.set-vars.outputs.ECS_CLUSTER }} ${{ steps.set-vars.outputs.CERAMIC_SVC }}
            ./stopTasks.sh ${{ steps.set-vars.outputs.ECS_CLUSTER }} ${{ steps.set-vars.outputs.IPFS_SVC }}
