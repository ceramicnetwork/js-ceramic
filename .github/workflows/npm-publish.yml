name: Publish npm packages

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of publish (one of: rc, full)'
        required: true
        default: 'rc'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      -
        name: Setup environment
        id: set-vars
        run: |
          if [[ "${{ github.event.inputs.type }}" == "full" ]]; then
            echo "::set-output name=target-branch::master"
            echo "::set-output name=source-branch::release-candidate"
            echo "::set-output name=tag::latest"
          else
            # Default to `release-candidate`
            echo "::set-output name=target-branch::release-candidate"
            echo "::set-output name=source-branch::develop"
            echo "::set-output name=tag::release-candidate"
          fi
      -
        name: Checkout ${{ steps.set-vars.outputs.target-branch }}
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: ${{ steps.set-vars.outputs.target-branch }}
      -
        name: Merge ${{ steps.set-vars.outputs.source-branch }} -> ${{ steps.set-vars.outputs.target-branch }}
        env:
          SOURCE_BRANCH: ${{ steps.set-vars.outputs.source-branch }}
        run: |
          git fetch origin $SOURCE_BRANCH
          git merge origin/$SOURCE_BRANCH
      -
        name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      -
        name: Initialize and build code
        run: |
          npm set unsafe-perm true
          npm ci && npm run build
      -
        name: Publish packages to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          TAG: ${{ steps.set-vars.outputs.tag }}
        run: |
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name ${{ github.actor }}
          npm config set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN
          npm run publish:$TAG
      -
        name: Update and push code to ${{ steps.set-vars.outputs.source-branch }}
        env:
          SOURCE_BRANCH: ${{ steps.set-vars.outputs.source-branch }}
          TARGET_BRANCH: ${{ steps.set-vars.outputs.target-branch }}
        run: |
          # Merge the target branch back to the source branch
          git checkout -B $SOURCE_BRANCH refs/remotes/origin/$SOURCE_BRANCH
          git merge origin/$TARGET_BRANCH
          git push

          # Always merge and push to `develop` - if it's already been merged to above, this action will have no effect
          git checkout -B develop refs/remotes/origin/develop
          git merge origin/$TARGET_BRANCH
          git push
