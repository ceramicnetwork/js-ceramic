name: Publish npm packages

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Type of publish (one of: rc, full, both, hotfix)'
        required: true
        default: 'rc'

jobs:
  publish_full:
    runs-on: ubuntu-latest
    steps:
      -
        name: Setup environment
        id: set-vars
        run: |
          if [[ "${{ github.event.inputs.type }}" == "both" || "${{ github.event.inputs.type }}" == "full" ]]; then
            echo "::set-output name=full::true"
          elif [[ "${{ github.event.inputs.type }}" == "hotfix" ]]; then
            echo "::set-output name=full::true"
            echo "::set-output name=hotfix::true"
          fi
      -
        name: Setup Node
        if: ${{ steps.set-vars.outputs.full == 'true' }}
        uses: actions/setup-node@v1
        with:
          node-version: 14
      -
        name: Checkout `master` branch
        if: ${{ steps.set-vars.outputs.full == 'true' }}
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: master
      -
        name: Merge `release-candidate` -> `master`
        if: ${{ steps.set-vars.outputs.full == 'true' && steps.set-vars.outputs.hotfix != 'true' }}
        run: |
          git fetch origin release-candidate
          git merge origin/release-candidate
      -
        name: Initialize and build code
        if: ${{ steps.set-vars.outputs.full == 'true' }}
        run: |
          npm set unsafe-perm true
          npm ci && npm run build
      -
        name: Publish packages to NPM
        if: ${{ steps.set-vars.outputs.full == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          TAG: ${{ matrix.tag }}
        run: |
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name ${{ github.actor }}
          npm config set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN
          npm run publish:latest
      -
        name: Update and push code to `release-candidate` and `develop`
        if: ${{ steps.set-vars.outputs.full == 'true' }}
        run: |
          git checkout -B release-candidate refs/remotes/origin/master
          git merge origin/master
          git push
          git checkout -B develop refs/remotes/origin/develop
          git merge origin/master
          git push

  publish_rc:
    runs-on: ubuntu-latest
    needs: publish_full
    steps:
      -
        name: Setup environment
        id: set-vars
        run: |
          if [[ "${{ github.event.inputs.type }}" == "both" || "${{ github.event.inputs.type }}" == "rc" ]]; then
            echo "::set-output name=rc::true"
          fi
      -
        name: Setup Node
        if: ${{ steps.set-vars.outputs.rc == 'true' }}
        uses: actions/setup-node@v1
        with:
          node-version: 14
      -
        name: Checkout `release-candidate` branch
        if: ${{ steps.set-vars.outputs.rc == 'true' }}
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: release-candidate
      -
        name: Send Discord notification
        run: |
          TITLE='**Release Candidate Published**'
          MESSAGE=$(git log -1 --pretty=%B)
          echo $TITLE
          echo $MESSAGE
          res=$(docker run --rm curlimages/curl curl -X POST ${{ secrets.DISCORD_RELEASE_WEBHOOK }} \
            -H "Content-Type: application/json" \
            -d "{\"embeds\":[{\"title\":$TITLE,\"description\":\"```$MESSAGE```\",\"color\":3581519}]}" \
          ) || exit 1
          echo $res
          #if [[ $res != *"204"* ]]; then
          exit 1
          #fi
      -
        name: Merge `develop` -> `release-candidate`
        if: ${{ steps.set-vars.outputs.rc == 'true' }}
        run: |
          git fetch origin develop
          git merge origin/develop
      -
        name: Initialize and build code
        if: ${{ steps.set-vars.outputs.rc == 'true' }}
        run: |
          npm set unsafe-perm true
          npm ci && npm run build
      -
        name: Publish packages to NPM
        if: ${{ steps.set-vars.outputs.rc == 'true' }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          TAG: ${{ matrix.tag }}
        run: |
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config user.name ${{ github.actor }}
          npm config set //registry.npmjs.org/:_authToken $NODE_AUTH_TOKEN
          npm run publish:release-candidate
      -
        name: Update and push code to `develop`
        if: ${{ steps.set-vars.outputs.rc == 'true' }}
        run: |
          git checkout -B develop refs/remotes/origin/develop
          git merge origin/release-candidate
          git push
